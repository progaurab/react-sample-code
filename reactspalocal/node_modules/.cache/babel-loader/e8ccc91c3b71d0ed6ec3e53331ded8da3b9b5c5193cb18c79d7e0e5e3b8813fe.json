{"ast":null,"code":"import { graphConfig } from \"./authConfig\";\n\n/**\n * Attaches a given access token to a MS Graph API call. Returns information about the user\n * @param accessToken \n */\nexport async function callMsGraph(accessToken) {\n  const headers = new Headers();\n  const bearer = `Bearer ${accessToken}`;\n  headers.append(\"Authorization\", bearer);\n  const options = {\n    method: \"GET\",\n    headers: headers\n  };\n  return fetch(graphConfig.graphMeEndpoint, options).then(response => response.json()).catch(error => console.log(error));\n}","map":{"version":3,"names":["graphConfig","callMsGraph","accessToken","headers","Headers","bearer","append","options","method","fetch","graphMeEndpoint","then","response","json","catch","error","console","log"],"sources":["/Users/gaurab/practice/reactspalocal/src/graph.js"],"sourcesContent":["import { graphConfig } from \"./authConfig\";\n\n/**\n * Attaches a given access token to a MS Graph API call. Returns information about the user\n * @param accessToken \n */\nexport async function callMsGraph(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n\n    return fetch(graphConfig.graphMeEndpoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;;AAE1C;AACA;AACA;AACA;AACA,OAAO,eAAeC,WAAWA,CAACC,WAAW,EAAE;EAC3C,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC7B,MAAMC,MAAM,GAAI,UAASH,WAAY,EAAC;EAEtCC,OAAO,CAACG,MAAM,CAAC,eAAe,EAAED,MAAM,CAAC;EAEvC,MAAME,OAAO,GAAG;IACZC,MAAM,EAAE,KAAK;IACbL,OAAO,EAAEA;EACb,CAAC;EAED,OAAOM,KAAK,CAACT,WAAW,CAACU,eAAe,EAAEH,OAAO,CAAC,CAC7CI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AAC3C"},"metadata":{},"sourceType":"module","externalDependencies":[]}